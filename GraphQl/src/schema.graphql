input Sort {
    name: String!
    direction: String!
}

input Aggregate {
    field: String!
    type: String!
}

#Syncfusion DataManager query params

input DataManager {
    skip: Int
    take: Int
    sorted: [Sort]
    group: [String]
    table: String
    select: [String]
    where: String
    search: String
    requiresCounts: Boolean
    aggregates: [Aggregate]
    params: String
}

# Schedule Appointment field names
input AppointmentFields {
  Id: Int!
  Subject: String
  StartTime: String!
  EndTime: String!
  Location: String
  IsAllDay: Boolean
  Guid: String
  RecurrenceRule: String
  StartTimezone: String
  EndTimezone: String
}

type Appointment {
  Id: Int!
  Subject: String
  StartTime: String!
  EndTime: String!
  Location: String
  IsAllDay: Boolean
  RecurrenceRule: String
  StartTimezone: String
  EndTimezone: String
}

type ReturnType {
  result: [Appointment]
}

type Query {
  getEvents(datamanager: DataManager): ReturnType 
}

type Mutation {
  batchUpdate(added: [AppointmentFields], changed: [AppointmentFields], deleted: [AppointmentFields]): Appointment
}